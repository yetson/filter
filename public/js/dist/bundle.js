(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

var TextEffect = require("./textEffect");

var TYPE_GLOW = {
  none: {},
  blue_5: { color: "#267DE6", size: 5, opacity: "1" },
  blue_8: { color: "#267DE6", size: 8, opacity: "1" },
  blue_11: { color: "#267DE6", size: 11, opacity: "1" },
  blue_18: { color: "#267DE6", size: 18, opacity: "1" },
  red_5: { color: "#EB2722", size: 5, opacity: "1" },
  red_8: { color: "#EB2722", size: 8, opacity: "1" },
  red_11: { color: "#EB2722", size: 11, opacity: "1" },
  red_18: { color: "#EB2722", size: 18, opacity: "1" },
  olive_5: { color: "#A8E034", size: 5, opacity: "1" },
  olive_8: { color: "#A8E034", size: 8, opacity: "1" },
  olive_11: { color: "#A8E034", size: 11, opacity: "1" },
  olive_18: { color: "#A8E034", size: 18, opacity: "1" },
  purple_5: { color: "#7E4DB9", size: 5, opacity: "1" },
  purple_8: { color: "#7E4DB9", size: 8, opacity: "1" },
  purple_11: { color: "#7E4DB9", size: 11, opacity: "1" },
  purple_18: { color: "#7E4DB9", size: 18, opacity: "1" },
  green_5: { color: "#1DC7F4", size: 5, opacity: "1" },
  green_8: { color: "#1DC7F4", size: 8, opacity: "1" },
  green_11: { color: "#1DC7F4", size: 11, opacity: "1" },
  green_18: { color: "#1DC7F4", size: 18, opacity: "1" },
  yellow_5: { color: "#FF9004", size: 5, opacity: "1" },
  yellow_8: { color: "#FF9004", size: 8, opacity: "1" },
  yellow_11: { color: "#FF9004", size: 11, opacity: "1" },
  yellow_18: { color: "#FF9004", size: 18, opacity: "1" }
};

var TYPE_SHADOW = {
  none: {},
  rightDown: { color: "#000000", opacity: "0.5", blur: "4", distance: "6" }
};

//leftUp: {color: "#000000", opacity: "0.5", size: "1", blur: "4", angle: "0", distance: "6"}
var Box = React.createClass({
  displayName: "Box",

  getInitialState: function getInitialState() {
    return {
      textInfo: {
        text: "text",
        fill: "#000000",
        fontSize: "80"
      },
      glowInfo: {},
      shadowInfo: {}
    };
  },
  change: function change(tarFormId, opt) {
    var glowOpt;
    if (tarFormId === "fontForm") {
      opt.text ? this.state.textInfo.text = opt.text : null;
      opt.size ? this.state.textInfo.fontSize = opt.size : null;
      opt.color ? this.state.textInfo.fill = opt.color : null;
    } else if (tarFormId === "glowForm") {
      if (opt['glowSelect']) {
        //if(opt['glowSelect'] === "0")return;
        this.state.glowInfo = _.clone(TYPE_GLOW[opt['glowSelect']]);
      } else {
        opt.color ? this.state.glowInfo.color = opt.color : null;
        opt.size ? this.state.glowInfo.size = opt.size : null;
        opt.opacity ? this.state.glowInfo.opacity = opt.opacity : null;
      }
      TextEffect.glow(ReactDOM.findDOMNode(this.refs.textBox).querySelector("text:last-child"), this.state.glowInfo);
    } else if (tarFormId === "shadowForm") {
      if (opt['shadowSelect']) {
        //if(opt['shadowSelect'] === "0")return;
        this.state.shadowInfo = _.clone(TYPE_SHADOW[opt['shadowSelect']]);
      } else {
        opt.color ? this.state.shadowInfo.color = opt.color : null;
        opt.opacity ? this.state.shadowInfo.opacity = opt.opacity : null;
        opt.size ? this.state.shadowInfo.size = opt.size : null;
        opt.blur ? this.state.shadowInfo.blur = opt.blur : null;
        opt.angle ? this.state.shadowInfo.angle = opt.angle : null;
        opt.distance ? this.state.shadowInfo.distance = opt.distance : null;
      }
      TextEffect.shadow(ReactDOM.findDOMNode(this.refs.textBox).querySelector("text:last-child"), this.state.shadowInfo);
    }
    this.forceUpdate();
  },
  render: function render() {
    return React.createElement(
      "div",
      null,
      React.createElement(TextBox, { ref: "textBox", style: this.state, textInfo: this.state.textInfo }),
      React.createElement(
        "div",
        { className: "display" },
        React.createElement(FormBox, { id: "fontForm", displayName: "字体", option: this.state.textInfo, onChange: this.change }),
        React.createElement(FormBox, { id: "glowForm", displayName: "发光", option: this.state.glowInfo, onChange: this.change }),
        React.createElement(FormBox, { id: "shadowForm", displayName: "阴影", option: this.state.shadowInfo, onChange: this.change })
      )
    );
  }
});

var TextBox = React.createClass({
  displayName: "TextBox",

  render: function render() {
    return React.createElement(
      "svg",
      { ref: "textArea", className: "show", style: { fontSize: this.props.textInfo.fontSize } },
      React.createElement(
        "g",
        null,
        React.createElement(
          "text",
          { x: "10", y: "100", fill: this.props.textInfo.fill },
          this.props.textInfo.text
        )
      )
    );
  }
});

var FormBox = React.createClass({
  displayName: "FormBox",

  getInitialState: function getInitialState() {
    return this.props.option;
  },
  handleChange: function handleChange(e) {
    e.preventDefault();
    var inputDom = e.currentTarget;
    var value = inputDom.value;
    this.state[inputDom.id] = value;
    this.forceUpdate();

    var obj = {};
    obj[inputDom.id] = value;
    this.props.onChange(this.props.id, obj);
  },
  render: function render() {
    var ps = Object.keys(this.props.option).map((function (k, index) {
      var type = k === "color" || k === "fill" ? "color" : k === "text" ? "text" : "range";
      var min = 1;
      var max = 100;
      var step = 1;

      if (k === "opacity") {
        min = 0;
        max = 1;
        step = 0.1;
      } else if (k === "angle") {
        min = 0;
        max = 360;
      } else if (k === "size" && this.props.id === "glowForm") {
        min = 1;
        max = 20;
      } else if (k === "distance" && this.props.id === "shadowForm") {
        min = -10;
        max = 10;
      } else if (k === "blur" && this.props.id === "shadowForm") {
        min = 0;
        max = 10;
      }
      return React.createElement(
        "p",
        { key: index },
        React.createElement(
          "label",
          null,
          k,
          " "
        ),
        React.createElement("input", { id: k, type: type, min: min, max: max, step: step, value: this.props.option[k], onInput: this.handleChange, onChange: this.handleChange }),
        React.createElement(
          "label",
          { name: "result" },
          " ",
          this.props.option[k]
        )
      );
    }).bind(this));
    var glowTypeSelect = Object.keys(TYPE_GLOW).map(function (t, index) {
      return React.createElement(
        "option",
        { key: index, value: t },
        t
      );
    });
    var shadowTypeSelect = Object.keys(TYPE_SHADOW).map(function (t, index) {
      return React.createElement(
        "option",
        { key: index, value: t },
        t
      );
    });
    return React.createElement(
      "form",
      null,
      React.createElement(
        "h2",
        null,
        this.props.displayName
      ),
      this.props.displayName === "发光" ? React.createElement(
        "select",
        { id: "glowSelect", onChange: this.handleChange },
        glowTypeSelect
      ) : this.props.displayName === "阴影" ? React.createElement(
        "select",
        { id: "shadowSelect", onChange: this.handleChange },
        shadowTypeSelect
      ) : null,
      ps
    );
  }
});

ReactDOM.render(React.createElement(Box, null), document.getElementById("content"));

},{"./textEffect":2}],2:[function(require,module,exports){
"use strict";

var SVG_NS = "http://www.w3.org/2000/svg";
var TextEffect = {
    glow: function glow(textSvg, opt) {
        [].forEach.call(textSvg.parentNode.querySelectorAll('.filter_glow_text,.filter_glow_defs'), function (f) {
            f.remove();
        });
        if (Object.keys(opt).length === 0) return;
        var color = opt.color || "#000",
            opacity = opt.opacity || "1",
            stdDeviation = opt.size || "4",
            filterText = textSvg.cloneNode(true),

        //filterText = React.cloneElement(textSvg),
        id = Math.random().toFixed(10).slice(-10),
            defs = document.createElementNS(SVG_NS, "defs");
        defs.setAttribute("id", "defs_glow_" + id);
        defs.setAttribute("class", "filter_glow_defs");
        defs.innerHTML = this.getGlowFilter("filter_glow_" + id, stdDeviation);
        filterText.removeAttribute("data-reactid");
        filterText.setAttribute("filter", "url(#filter_glow_" + id + ")");
        filterText.setAttribute("fill", color);
        filterText.setAttribute("opacity", opacity);
        filterText.setAttribute("class", "filter_glow_text");
        textSvg.parentNode.insertBefore(defs, textSvg);
        textSvg.parentNode.insertBefore(filterText, textSvg);
    },
    getGlowFilter: function getGlowFilter(id, stdDeviation) {
        return "\n            <filter id=\"" + id + "\" x=\"-30%\" y=\"-30%\" width=\"160%\" height=\"160%\">\n                <feGaussianBlur stdDeviation=\"" + stdDeviation + "\" result=\"glow\"/>\n                <feMerge>\n                    <feMergeNode in=\"glow\"/>\n                    <feMergeNode in=\"glow\"/>\n                    <feMergeNode in=\"glow\"/>\n                </feMerge>\n            </filter>";
    },
    shadow: function shadow(textSvg, opt) {
        [].forEach.call(textSvg.parentNode.querySelectorAll('.filter_shadow_text,.filter_shadow_defs'), function (f) {
            f.remove();
        });
        if (Object.keys(opt).length === 0) return;
        var color = opt.color || "#000",
            opacity = opt.opacity || 1,
            stdDeviation = opt.blur || 4,
            distance = opt.distance || 0,
            angle = opt.angle || 0,
            filterText = textSvg.cloneNode(true),
            id = Math.random().toFixed(10).slice(-10),
            defs = document.createElementNS(SVG_NS, "defs");
        defs.setAttribute("id", "defs_shadow_" + id);
        defs.setAttribute("class", "filter_shadow_defs");
        defs.innerHTML = this.getShadowFilter("filter_shadow_" + id, stdDeviation, distance);
        filterText.setAttribute("filter", "url(#filter_shadow_" + id + ")");
        filterText.setAttribute("fill", color);
        filterText.setAttribute("opacity", opacity);
        filterText.setAttribute("class", "filter_shadow_text");
        textSvg.parentNode.insertBefore(defs, textSvg);
        textSvg.parentNode.insertBefore(filterText, textSvg);
    },
    getShadowFilter: function getShadowFilter(id, stdDeviation, distance) {
        return "\n            <filter id=\"" + id + "\" x=\"-30%\" y=\"-30%\" width=\"160%\" height=\"160%\">\n                <feGaussianBlur stdDeviation=\"" + stdDeviation + "\" result=\"shadow\"/>\n                <feOffset dx=\"" + distance + "\" dy=\"" + distance + "\"/>\n            </filter>";
    }
};

module.exports = TextEffect;

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
